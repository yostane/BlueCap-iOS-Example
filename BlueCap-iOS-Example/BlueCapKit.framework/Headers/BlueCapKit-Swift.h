// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import CoreLocation;
@import CoreBluetooth;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class CLLocation;
@class CLLocationManager;

SWIFT_CLASS("_TtC10BlueCapKit15LocationManager")
@interface LocationManager : NSObject <CLLocationManagerDelegate>
@property (nonatomic, readonly) BOOL isUpdating;
@property (nonatomic) BOOL pausesLocationUpdatesAutomatically;
@property (nonatomic) BOOL allowsBackgroundLocationUpdates;
@property (nonatomic) CLActivityType activityType;
@property (nonatomic) CLLocationDistance distanceFilter;
@property (nonatomic) CLLocationAccuracy desiredAccuracy;
- (CLAuthorizationStatus)authorizationStatus;
- (nonnull instancetype)init;
@property (nonatomic, readonly, strong) CLLocation * _Nullable location;
- (BOOL)locationServicesEnabled;
- (void)stopUpdatingLocation;
+ (BOOL)significantLocationChangeMonitoringAvailable;
- (void)stopMonitoringSignificantLocationChanges;
- (BOOL)deferredLocationUpdatesAvailable;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didFailWithError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didFinishDeferredUpdatesWithError:(NSError * _Nullable)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
- (void)didUpdateWithLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)didFailWithError:(NSError * _Nonnull)error;
- (void)didFinishDeferredUpdatesWithError:(NSError * _Nullable)error;
- (void)didChangeAuthorizationWithStatus:(CLAuthorizationStatus)status;
@end

@class CLRegion;

SWIFT_CLASS("_TtC10BlueCapKit13RegionManager")
@interface RegionManager : LocationManager
@property (nonatomic, readonly) BOOL isMonitoring;
@property (nonatomic, readonly) CLLocationDistance maximumRegionMonitoringDistance;
- (nonnull instancetype)init;
- (BOOL)isMonitoringRegion:(NSString * _Nonnull)identifier;
- (void)stopMonitoringAllRegions;
- (void)locationManager:(CLLocationManager * _Nonnull)_ didDetermineState:(CLRegionState)state forRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)_ monitoringDidFailForRegion:(CLRegion * _Nullable)region withError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)_ didStartMonitoringForRegion:(CLRegion * _Nonnull)region;
- (void)didEnterWithRegion:(CLRegion * _Nonnull)region;
- (void)didExitWithRegion:(CLRegion * _Nonnull)region;
- (void)didDetermineWithState:(CLRegionState)state forRegion:(CLRegion * _Nonnull)region;
- (void)monitoringDidFailForRegion:(CLRegion * _Nullable)region withError:(NSError * _Nonnull)error;
- (void)didStartMonitoringForRegion:(CLRegion * _Nonnull)region;
@end

@class CLBeacon;
@class CLBeaconRegion;

SWIFT_CLASS("_TtC10BlueCapKit13BeaconManager")
@interface BeaconManager : RegionManager
@property (nonatomic, readonly) BOOL isRanging;
- (BOOL)isRangingAvailable;
- (nonnull instancetype)init;
- (BOOL)isRangingRegionWithIdentifier:(NSString * _Nonnull)identifier;
- (void)stopRangingAllBeacons;
- (void)locationManager:(CLLocationManager * _Nonnull)_ didRangeBeacons:(NSArray<CLBeacon *> * _Nonnull)beacons inRegion:(CLBeaconRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)_ rangingBeaconsDidFailForRegion:(CLBeaconRegion * _Nonnull)region withError:(NSError * _Nonnull)error;
- (void)rangingBeaconsDidFailInRegion:(CLBeaconRegion * _Nonnull)region withError:(NSError * _Nonnull)error;
@end


@interface CBATTRequest (SWIFT_EXTENSION(BlueCapKit))
@end


@interface CBCentral (SWIFT_EXTENSION(BlueCapKit))
@end


@interface CBCentralManager (SWIFT_EXTENSION(BlueCapKit))
@end


@interface CBCharacteristic (SWIFT_EXTENSION(BlueCapKit))
@end


@interface CBMutableCharacteristic (SWIFT_EXTENSION(BlueCapKit))
@end


@interface CBMutableService (SWIFT_EXTENSION(BlueCapKit))
@end


@interface CBPeripheral (SWIFT_EXTENSION(BlueCapKit))
@end


@interface CBPeripheralManager (SWIFT_EXTENSION(BlueCapKit))
@end


@interface CBService (SWIFT_EXTENSION(BlueCapKit))
@end


@interface CLBeacon (SWIFT_EXTENSION(BlueCapKit))
@end


@interface CLLocationManager (SWIFT_EXTENSION(BlueCapKit))
@end

@class Peripheral;
@class CBUUID;
@class NSNumber;

SWIFT_CLASS("_TtC10BlueCapKit14CentralManager")
@interface CentralManager : NSObject <CBCentralManagerDelegate>
@property (nonatomic, readonly, copy) NSDictionary<NSUUID *, Peripheral *> * _Nonnull discoveredPeripherals;
@property (nonatomic, readonly, copy) NSArray<Peripheral *> * _Nonnull peripherals;
@property (nonatomic, readonly) BOOL isScanning;
@property (nonatomic, readonly) BOOL poweredOn;
- (nonnull instancetype)init;
- (void)reset;
- (void)invalidate;
- (void)disconnectAllPeripherals;
- (void)removeAllPeripherals;
- (void)removePeripheralWithIdentifier:(NSUUID * _Nonnull)identifier;
- (void)stopScanning;
- (NSArray<Peripheral *> * _Nonnull)retrieveConnectedPeripheralsWithServices:(NSArray<CBUUID *> * _Nonnull)services;
- (NSArray<Peripheral *> * _Nonnull)retrievePeripheralsWithIdentifiers:(NSArray<NSUUID *> * _Nonnull)identifiers;
- (NSArray<Peripheral *> * _Nonnull)retrievePeripherals;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didFailToConnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central willRestoreState:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
@end


SWIFT_CLASS("_TtC10BlueCapKit14Characteristic")
@interface Characteristic : NSObject
@property (nonatomic, readonly) NSInteger pendingReadCount;
@property (nonatomic, readonly) NSInteger pendingWriteCount;
@property (nonatomic, readonly, strong) CBUUID * _Nonnull uuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) BOOL isNotifying;
@property (nonatomic, readonly) BOOL canNotify;
@property (nonatomic, readonly) BOOL canRead;
@property (nonatomic, readonly) BOOL canWrite;
@property (nonatomic, readonly, copy) NSData * _Nullable dataValue;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull stringValues;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable stringValue;
@property (nonatomic, readonly) CBCharacteristicProperties properties;
- (NSDictionary<NSString *, NSString *> * _Nullable)stringValue:(NSData * _Nullable)data;
- (NSData * _Nullable)dataFromString:(NSDictionary<NSString *, NSString *> * _Nonnull)stringValue;
- (BOOL)propertyEnabled:(CBCharacteristicProperties)property;
- (void)stopNotificationUpdates;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@class MutableService;

SWIFT_CLASS("_TtC10BlueCapKit21MutableCharacteristic")
@interface MutableCharacteristic : NSObject
@property (nonatomic, readonly, weak) MutableService * _Nullable service;
@property (nonatomic, copy) NSData * _Nullable value;
@property (nonatomic, readonly) BOOL isUpdating;
@property (nonatomic, readonly, strong) CBUUID * _Nonnull uuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull stringValues;
@property (nonatomic, readonly) CBAttributePermissions permissions;
@property (nonatomic, readonly) CBCharacteristicProperties properties;
@property (nonatomic, readonly, copy) NSArray<NSData *> * _Nonnull pendingUpdates;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable stringValue;
@property (nonatomic, readonly) BOOL canNotify;
- (nonnull instancetype)initWithUUID:(NSString * _Nonnull)UUID properties:(CBCharacteristicProperties)properties permissions:(CBAttributePermissions)permissions value:(NSData * _Nullable)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUUID:(NSString * _Nonnull)UUID;
- (BOOL)propertyEnabled:(CBCharacteristicProperties)property;
- (BOOL)permissionEnabled:(CBAttributePermissions)permission;
- (NSData * _Nullable)dataFromString:(NSDictionary<NSString *, NSString *> * _Nonnull)data;
- (void)stopRespondingToWriteRequests;
- (BOOL)updateWithString:(NSDictionary<NSString *, NSString *> * _Nonnull)value error:(NSError * _Nullable * _Nullable)error;
- (BOOL)updateWithData:(NSData * _Nonnull)value error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC10BlueCapKit14MutableService")
@interface MutableService : NSObject
@property (nonatomic, readonly, strong) CBUUID * _Nonnull uuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSArray<MutableCharacteristic *> * _Nonnull characteristics;
- (nonnull instancetype)initWithUuid:(NSString * _Nonnull)uuid;
- (void)characteristicsFromProfiles;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class CBDescriptor;

SWIFT_CLASS("_TtC10BlueCapKit10Peripheral")
@interface Peripheral : NSObject <CBPeripheralDelegate>
@property (nonatomic, readonly, copy) NSDate * _Nonnull discoveredAt;
@property (nonatomic, readonly) NSInteger RSSI;
@property (nonatomic, readonly, copy) NSDate * _Nullable connectedAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable disconnectedAt;
@property (nonatomic, readonly) NSUInteger timeoutCount;
@property (nonatomic, readonly) NSUInteger disconnectionCount;
@property (nonatomic, readonly) NSUInteger connectionCount;
@property (nonatomic, readonly) NSTimeInterval secondsConnected;
@property (nonatomic, readonly) NSTimeInterval totalSecondsConnected;
@property (nonatomic, readonly) NSTimeInterval cumlativeSecondsConnected;
@property (nonatomic, readonly) NSTimeInterval cumlativeSecondsDisconnected;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSUUID * _Nonnull identifier;
- (Characteristic * _Nullable)characteristic:(CBUUID * _Nonnull)uuid;
@property (nonatomic, readonly) CBPeripheralState state;
- (void)stopPollingRSSI;
- (void)reconnectWithDelay:(NSTimeInterval)delay;
- (void)terminate;
- (void)disconnect;
- (void)peripheralDidUpdateName:(CBPeripheral * _Nonnull)_;
- (void)peripheral:(CBPeripheral * _Nonnull)_ didModifyServices:(NSArray<CBService *> * _Nonnull)invalidatedServices;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didReadRSSI:(NSNumber * _Nonnull)RSSI error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverIncludedServicesForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateNotificationStateForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didWriteValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverDescriptorsForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForDescriptor:(CBDescriptor * _Nonnull)descriptor error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didWriteValueForDescriptor:(CBDescriptor * _Nonnull)descriptor error:(NSError * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class OS_dispatch_queue;

SWIFT_CLASS("_TtC10BlueCapKit17PeripheralManager")
@interface PeripheralManager : NSObject <CBPeripheralManagerDelegate>
@property (nonatomic, readonly) BOOL isAdvertising;
@property (nonatomic, readonly) BOOL poweredOn;
@property (nonatomic, readonly, copy) NSArray<MutableService *> * _Nonnull services;
@property (nonatomic, readonly, copy) NSArray<MutableCharacteristic *> * _Nonnull characteristics;
- (MutableService * _Nullable)serviceWithUUID:(CBUUID * _Nonnull)uuid;
- (MutableCharacteristic * _Nullable)characteristicWithUUID:(CBUUID * _Nonnull)uuid;
- (nonnull instancetype)init;
- (nonnull instancetype)initWithOptions:(NSDictionary<NSString *, id> * _Nullable)options;
- (nonnull instancetype)initWithQueue:(OS_dispatch_queue * _Nonnull)queue options:(NSDictionary<NSString *, id> * _Nullable)options OBJC_DESIGNATED_INITIALIZER;
- (void)reset;
- (void)invalidate;
- (void)remove:(MutableService * _Nonnull)service;
- (void)removeAllServices;
- (BOOL)updateValue:(NSData * _Nonnull)value forCharacteristic:(MutableCharacteristic * _Nonnull)characteristic;
- (void)peripheralManagerDidUpdateState:(CBPeripheralManager * _Nonnull)peripheralManager;
- (void)peripheralManager:(CBPeripheralManager * _Nonnull)_ willRestoreState:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (void)peripheralManagerDidStartAdvertising:(CBPeripheralManager * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)peripheralManager:(CBPeripheralManager * _Nonnull)peripheral didAddService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheralManager:(CBPeripheralManager * _Nonnull)_ central:(CBCentral * _Nonnull)central didSubscribeToCharacteristic:(CBCharacteristic * _Nonnull)characteristic;
- (void)peripheralManager:(CBPeripheralManager * _Nonnull)_ central:(CBCentral * _Nonnull)central didUnsubscribeFromCharacteristic:(CBCharacteristic * _Nonnull)characteristic;
- (void)peripheralManager:(CBPeripheralManager * _Nonnull)peripheral didReceiveReadRequest:(CBATTRequest * _Nonnull)request;
- (void)peripheralManagerIsReadyToUpdateSubscribers:(CBPeripheralManager * _Nonnull)peripheral;
- (void)peripheralManager:(CBPeripheralManager * _Nonnull)peripheral didReceiveWriteRequests:(NSArray<CBATTRequest *> * _Nonnull)requests;
@end


#pragma clang diagnostic pop
